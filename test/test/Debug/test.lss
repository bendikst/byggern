
test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000022  00800100  00000554  000005e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000554  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  00800122  00800122  0000060a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000060a  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  0000063a  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000043c  00000000  00000000  0000068a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000029b  00000000  00000000  00000ac6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000023f  00000000  00000000  00000d61  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000068  00000000  00000000  00000fa0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001ed  00000000  00000000  00001008  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000069  00000000  00000000  000011f5  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  0000125e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e4 e5       	ldi	r30, 0x54	; 84
  84:	f5 e0       	ldi	r31, 0x05	; 5
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a2 32       	cpi	r26, 0x22	; 34
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a2 e2       	ldi	r26, 0x22	; 34
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	ae 32       	cpi	r26, 0x2E	; 46
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 57 00 	call	0xae	; 0xae <main>
  a6:	0c 94 a8 02 	jmp	0x550	; 0x550 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <main>:


int main(void)
{
	
	UART_init(9600);
  ae:	80 e8       	ldi	r24, 0x80	; 128
  b0:	95 e2       	ldi	r25, 0x25	; 37
  b2:	0e 94 89 00 	call	0x112	; 0x112 <UART_init>
	unsigned char test = 0;
	UART_transmit('y');
  b6:	89 e7       	ldi	r24, 0x79	; 121
  b8:	0e 94 81 00 	call	0x102	; 0x102 <UART_transmit>
	printf("Hello\n");
  bc:	86 e0       	ldi	r24, 0x06	; 6
  be:	91 e0       	ldi	r25, 0x01	; 1
  c0:	0e 94 31 01 	call	0x262	; 0x262 <puts>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  c4:	2f ef       	ldi	r18, 0xFF	; 255
  c6:	8f e7       	ldi	r24, 0x7F	; 127
  c8:	97 e0       	ldi	r25, 0x07	; 7
  ca:	21 50       	subi	r18, 0x01	; 1
  cc:	80 40       	sbci	r24, 0x00	; 0
  ce:	90 40       	sbci	r25, 0x00	; 0
  d0:	e1 f7       	brne	.-8      	; 0xca <main+0x1c>
  d2:	00 c0       	rjmp	.+0      	; 0xd4 <main+0x26>
  d4:	00 00       	nop
    {
		//UART_transmit('y');
		//UART_transmit('s');
		_delay_ms(500);
		
		printf(" its me\n");
  d6:	8c e0       	ldi	r24, 0x0C	; 12
  d8:	91 e0       	ldi	r25, 0x01	; 1
  da:	0e 94 31 01 	call	0x262	; 0x262 <puts>
		printf("Hellooo\n");
  de:	84 e1       	ldi	r24, 0x14	; 20
  e0:	91 e0       	ldi	r25, 0x01	; 1
  e2:	0e 94 31 01 	call	0x262	; 0x262 <puts>
		//UART_transmit('\n');
		test = UART_receive();
  e6:	0e 94 85 00 	call	0x10a	; 0x10a <UART_receive>
		
		
		
		if(test){
  ea:	88 23       	and	r24, r24
  ec:	29 f0       	breq	.+10     	; 0xf8 <main+0x4a>
			UART_transmit(test);
  ee:	0e 94 81 00 	call	0x102	; 0x102 <UART_transmit>
			//UART_transmit('\n');
			UART_transmit('y');
  f2:	89 e7       	ldi	r24, 0x79	; 121
  f4:	0e 94 81 00 	call	0x102	; 0x102 <UART_transmit>
		}
		test = 0;
		printf("test\n");
  f8:	8c e1       	ldi	r24, 0x1C	; 28
  fa:	91 e0       	ldi	r25, 0x01	; 1
  fc:	0e 94 31 01 	call	0x262	; 0x262 <puts>
    }
 100:	e1 cf       	rjmp	.-62     	; 0xc4 <main+0x16>

00000102 <UART_transmit>:

FILE *uart;

void UART_transmit(unsigned char data){
	//Wait for empty transmit buffer
	while (!(UCSR0A & ( 1<<UDRE0)));
 102:	5d 9b       	sbis	0x0b, 5	; 11
 104:	fe cf       	rjmp	.-4      	; 0x102 <UART_transmit>
		
	//Puts data into buffer, sends data
	UDR0 = data;
 106:	8c b9       	out	0x0c, r24	; 12
 108:	08 95       	ret

0000010a <UART_receive>:
}

unsigned char UART_receive(void){
	
	while (!(UCSR0A & (1<<RXC0)));
 10a:	5f 9b       	sbis	0x0b, 7	; 11
 10c:	fe cf       	rjmp	.-4      	; 0x10a <UART_receive>
	
	return UDR0;
 10e:	8c b1       	in	r24, 0x0c	; 12
}
 110:	08 95       	ret

00000112 <UART_init>:

void UART_init(unsigned int baud){
	
	int baudrate = 4915200/16/baud -1;
 112:	9c 01       	movw	r18, r24
 114:	40 e0       	ldi	r20, 0x00	; 0
 116:	50 e0       	ldi	r21, 0x00	; 0
 118:	60 e0       	ldi	r22, 0x00	; 0
 11a:	70 eb       	ldi	r23, 0xB0	; 176
 11c:	84 e0       	ldi	r24, 0x04	; 4
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	0e 94 a5 00 	call	0x14a	; 0x14a <__divmodsi4>
 124:	21 50       	subi	r18, 0x01	; 1
 126:	31 09       	sbc	r19, r1
	//Set baud rate
	UBRR0H = (unsigned char) (baudrate>>8);
 128:	30 bd       	out	0x20, r19	; 32
	UBRR0L = (unsigned char) baudrate;
 12a:	29 b9       	out	0x09, r18	; 9
	
	//Enable receiver, transmitter
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 12c:	88 e1       	ldi	r24, 0x18	; 24
 12e:	8a b9       	out	0x0a, r24	; 10
	
	//Set frame format: 8 data, 1 stop bit
	//UCSR0C = (1<<URSEL0)|(0<<USBS0)|(3<<UCSZ00);
	UCSR0C = (1<<URSEL0)|(3<<UCSZ00);
 130:	86 e8       	ldi	r24, 0x86	; 134
 132:	80 bd       	out	0x20, r24	; 32
	
	uart = fdevopen(UART_transmit, UART_receive);
 134:	65 e8       	ldi	r22, 0x85	; 133
 136:	70 e0       	ldi	r23, 0x00	; 0
 138:	81 e8       	ldi	r24, 0x81	; 129
 13a:	90 e0       	ldi	r25, 0x00	; 0
 13c:	0e 94 e6 00 	call	0x1cc	; 0x1cc <fdevopen>
 140:	90 93 23 01 	sts	0x0123, r25
 144:	80 93 22 01 	sts	0x0122, r24
 148:	08 95       	ret

0000014a <__divmodsi4>:
 14a:	05 2e       	mov	r0, r21
 14c:	97 fb       	bst	r25, 7
 14e:	1e f4       	brtc	.+6      	; 0x156 <__divmodsi4+0xc>
 150:	00 94       	com	r0
 152:	0e 94 bc 00 	call	0x178	; 0x178 <__negsi2>
 156:	57 fd       	sbrc	r21, 7
 158:	07 d0       	rcall	.+14     	; 0x168 <__divmodsi4_neg2>
 15a:	0e 94 c4 00 	call	0x188	; 0x188 <__udivmodsi4>
 15e:	07 fc       	sbrc	r0, 7
 160:	03 d0       	rcall	.+6      	; 0x168 <__divmodsi4_neg2>
 162:	4e f4       	brtc	.+18     	; 0x176 <__divmodsi4_exit>
 164:	0c 94 bc 00 	jmp	0x178	; 0x178 <__negsi2>

00000168 <__divmodsi4_neg2>:
 168:	50 95       	com	r21
 16a:	40 95       	com	r20
 16c:	30 95       	com	r19
 16e:	21 95       	neg	r18
 170:	3f 4f       	sbci	r19, 0xFF	; 255
 172:	4f 4f       	sbci	r20, 0xFF	; 255
 174:	5f 4f       	sbci	r21, 0xFF	; 255

00000176 <__divmodsi4_exit>:
 176:	08 95       	ret

00000178 <__negsi2>:
 178:	90 95       	com	r25
 17a:	80 95       	com	r24
 17c:	70 95       	com	r23
 17e:	61 95       	neg	r22
 180:	7f 4f       	sbci	r23, 0xFF	; 255
 182:	8f 4f       	sbci	r24, 0xFF	; 255
 184:	9f 4f       	sbci	r25, 0xFF	; 255
 186:	08 95       	ret

00000188 <__udivmodsi4>:
 188:	a1 e2       	ldi	r26, 0x21	; 33
 18a:	1a 2e       	mov	r1, r26
 18c:	aa 1b       	sub	r26, r26
 18e:	bb 1b       	sub	r27, r27
 190:	fd 01       	movw	r30, r26
 192:	0d c0       	rjmp	.+26     	; 0x1ae <__udivmodsi4_ep>

00000194 <__udivmodsi4_loop>:
 194:	aa 1f       	adc	r26, r26
 196:	bb 1f       	adc	r27, r27
 198:	ee 1f       	adc	r30, r30
 19a:	ff 1f       	adc	r31, r31
 19c:	a2 17       	cp	r26, r18
 19e:	b3 07       	cpc	r27, r19
 1a0:	e4 07       	cpc	r30, r20
 1a2:	f5 07       	cpc	r31, r21
 1a4:	20 f0       	brcs	.+8      	; 0x1ae <__udivmodsi4_ep>
 1a6:	a2 1b       	sub	r26, r18
 1a8:	b3 0b       	sbc	r27, r19
 1aa:	e4 0b       	sbc	r30, r20
 1ac:	f5 0b       	sbc	r31, r21

000001ae <__udivmodsi4_ep>:
 1ae:	66 1f       	adc	r22, r22
 1b0:	77 1f       	adc	r23, r23
 1b2:	88 1f       	adc	r24, r24
 1b4:	99 1f       	adc	r25, r25
 1b6:	1a 94       	dec	r1
 1b8:	69 f7       	brne	.-38     	; 0x194 <__udivmodsi4_loop>
 1ba:	60 95       	com	r22
 1bc:	70 95       	com	r23
 1be:	80 95       	com	r24
 1c0:	90 95       	com	r25
 1c2:	9b 01       	movw	r18, r22
 1c4:	ac 01       	movw	r20, r24
 1c6:	bd 01       	movw	r22, r26
 1c8:	cf 01       	movw	r24, r30
 1ca:	08 95       	ret

000001cc <fdevopen>:
 1cc:	0f 93       	push	r16
 1ce:	1f 93       	push	r17
 1d0:	cf 93       	push	r28
 1d2:	df 93       	push	r29
 1d4:	ec 01       	movw	r28, r24
 1d6:	8b 01       	movw	r16, r22
 1d8:	00 97       	sbiw	r24, 0x00	; 0
 1da:	31 f4       	brne	.+12     	; 0x1e8 <fdevopen+0x1c>
 1dc:	61 15       	cp	r22, r1
 1de:	71 05       	cpc	r23, r1
 1e0:	19 f4       	brne	.+6      	; 0x1e8 <fdevopen+0x1c>
 1e2:	80 e0       	ldi	r24, 0x00	; 0
 1e4:	90 e0       	ldi	r25, 0x00	; 0
 1e6:	38 c0       	rjmp	.+112    	; 0x258 <fdevopen+0x8c>
 1e8:	6e e0       	ldi	r22, 0x0E	; 14
 1ea:	70 e0       	ldi	r23, 0x00	; 0
 1ec:	81 e0       	ldi	r24, 0x01	; 1
 1ee:	90 e0       	ldi	r25, 0x00	; 0
 1f0:	0e 94 5e 01 	call	0x2bc	; 0x2bc <calloc>
 1f4:	fc 01       	movw	r30, r24
 1f6:	00 97       	sbiw	r24, 0x00	; 0
 1f8:	a1 f3       	breq	.-24     	; 0x1e2 <fdevopen+0x16>
 1fa:	80 e8       	ldi	r24, 0x80	; 128
 1fc:	83 83       	std	Z+3, r24	; 0x03
 1fe:	01 15       	cp	r16, r1
 200:	11 05       	cpc	r17, r1
 202:	71 f0       	breq	.+28     	; 0x220 <fdevopen+0x54>
 204:	13 87       	std	Z+11, r17	; 0x0b
 206:	02 87       	std	Z+10, r16	; 0x0a
 208:	81 e8       	ldi	r24, 0x81	; 129
 20a:	83 83       	std	Z+3, r24	; 0x03
 20c:	80 91 24 01 	lds	r24, 0x0124
 210:	90 91 25 01 	lds	r25, 0x0125
 214:	89 2b       	or	r24, r25
 216:	21 f4       	brne	.+8      	; 0x220 <fdevopen+0x54>
 218:	f0 93 25 01 	sts	0x0125, r31
 21c:	e0 93 24 01 	sts	0x0124, r30
 220:	20 97       	sbiw	r28, 0x00	; 0
 222:	c9 f0       	breq	.+50     	; 0x256 <fdevopen+0x8a>
 224:	d1 87       	std	Z+9, r29	; 0x09
 226:	c0 87       	std	Z+8, r28	; 0x08
 228:	83 81       	ldd	r24, Z+3	; 0x03
 22a:	82 60       	ori	r24, 0x02	; 2
 22c:	83 83       	std	Z+3, r24	; 0x03
 22e:	80 91 26 01 	lds	r24, 0x0126
 232:	90 91 27 01 	lds	r25, 0x0127
 236:	89 2b       	or	r24, r25
 238:	71 f4       	brne	.+28     	; 0x256 <fdevopen+0x8a>
 23a:	f0 93 27 01 	sts	0x0127, r31
 23e:	e0 93 26 01 	sts	0x0126, r30
 242:	80 91 28 01 	lds	r24, 0x0128
 246:	90 91 29 01 	lds	r25, 0x0129
 24a:	89 2b       	or	r24, r25
 24c:	21 f4       	brne	.+8      	; 0x256 <fdevopen+0x8a>
 24e:	f0 93 29 01 	sts	0x0129, r31
 252:	e0 93 28 01 	sts	0x0128, r30
 256:	cf 01       	movw	r24, r30
 258:	df 91       	pop	r29
 25a:	cf 91       	pop	r28
 25c:	1f 91       	pop	r17
 25e:	0f 91       	pop	r16
 260:	08 95       	ret

00000262 <puts>:
 262:	0f 93       	push	r16
 264:	1f 93       	push	r17
 266:	cf 93       	push	r28
 268:	df 93       	push	r29
 26a:	e0 91 26 01 	lds	r30, 0x0126
 26e:	f0 91 27 01 	lds	r31, 0x0127
 272:	23 81       	ldd	r18, Z+3	; 0x03
 274:	21 ff       	sbrs	r18, 1
 276:	1b c0       	rjmp	.+54     	; 0x2ae <puts+0x4c>
 278:	ec 01       	movw	r28, r24
 27a:	00 e0       	ldi	r16, 0x00	; 0
 27c:	10 e0       	ldi	r17, 0x00	; 0
 27e:	89 91       	ld	r24, Y+
 280:	60 91 26 01 	lds	r22, 0x0126
 284:	70 91 27 01 	lds	r23, 0x0127
 288:	db 01       	movw	r26, r22
 28a:	18 96       	adiw	r26, 0x08	; 8
 28c:	ed 91       	ld	r30, X+
 28e:	fc 91       	ld	r31, X
 290:	19 97       	sbiw	r26, 0x09	; 9
 292:	88 23       	and	r24, r24
 294:	31 f0       	breq	.+12     	; 0x2a2 <puts+0x40>
 296:	09 95       	icall
 298:	89 2b       	or	r24, r25
 29a:	89 f3       	breq	.-30     	; 0x27e <puts+0x1c>
 29c:	0f ef       	ldi	r16, 0xFF	; 255
 29e:	1f ef       	ldi	r17, 0xFF	; 255
 2a0:	ee cf       	rjmp	.-36     	; 0x27e <puts+0x1c>
 2a2:	8a e0       	ldi	r24, 0x0A	; 10
 2a4:	09 95       	icall
 2a6:	89 2b       	or	r24, r25
 2a8:	11 f4       	brne	.+4      	; 0x2ae <puts+0x4c>
 2aa:	c8 01       	movw	r24, r16
 2ac:	02 c0       	rjmp	.+4      	; 0x2b2 <puts+0x50>
 2ae:	8f ef       	ldi	r24, 0xFF	; 255
 2b0:	9f ef       	ldi	r25, 0xFF	; 255
 2b2:	df 91       	pop	r29
 2b4:	cf 91       	pop	r28
 2b6:	1f 91       	pop	r17
 2b8:	0f 91       	pop	r16
 2ba:	08 95       	ret

000002bc <calloc>:
 2bc:	0f 93       	push	r16
 2be:	1f 93       	push	r17
 2c0:	cf 93       	push	r28
 2c2:	df 93       	push	r29
 2c4:	86 9f       	mul	r24, r22
 2c6:	80 01       	movw	r16, r0
 2c8:	87 9f       	mul	r24, r23
 2ca:	10 0d       	add	r17, r0
 2cc:	96 9f       	mul	r25, r22
 2ce:	10 0d       	add	r17, r0
 2d0:	11 24       	eor	r1, r1
 2d2:	c8 01       	movw	r24, r16
 2d4:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <malloc>
 2d8:	ec 01       	movw	r28, r24
 2da:	00 97       	sbiw	r24, 0x00	; 0
 2dc:	29 f0       	breq	.+10     	; 0x2e8 <calloc+0x2c>
 2de:	a8 01       	movw	r20, r16
 2e0:	60 e0       	ldi	r22, 0x00	; 0
 2e2:	70 e0       	ldi	r23, 0x00	; 0
 2e4:	0e 94 a1 02 	call	0x542	; 0x542 <memset>
 2e8:	ce 01       	movw	r24, r28
 2ea:	df 91       	pop	r29
 2ec:	cf 91       	pop	r28
 2ee:	1f 91       	pop	r17
 2f0:	0f 91       	pop	r16
 2f2:	08 95       	ret

000002f4 <malloc>:
 2f4:	cf 93       	push	r28
 2f6:	df 93       	push	r29
 2f8:	82 30       	cpi	r24, 0x02	; 2
 2fa:	91 05       	cpc	r25, r1
 2fc:	10 f4       	brcc	.+4      	; 0x302 <malloc+0xe>
 2fe:	82 e0       	ldi	r24, 0x02	; 2
 300:	90 e0       	ldi	r25, 0x00	; 0
 302:	e0 91 2c 01 	lds	r30, 0x012C
 306:	f0 91 2d 01 	lds	r31, 0x012D
 30a:	20 e0       	ldi	r18, 0x00	; 0
 30c:	30 e0       	ldi	r19, 0x00	; 0
 30e:	a0 e0       	ldi	r26, 0x00	; 0
 310:	b0 e0       	ldi	r27, 0x00	; 0
 312:	30 97       	sbiw	r30, 0x00	; 0
 314:	39 f1       	breq	.+78     	; 0x364 <malloc+0x70>
 316:	40 81       	ld	r20, Z
 318:	51 81       	ldd	r21, Z+1	; 0x01
 31a:	48 17       	cp	r20, r24
 31c:	59 07       	cpc	r21, r25
 31e:	b8 f0       	brcs	.+46     	; 0x34e <malloc+0x5a>
 320:	48 17       	cp	r20, r24
 322:	59 07       	cpc	r21, r25
 324:	71 f4       	brne	.+28     	; 0x342 <malloc+0x4e>
 326:	82 81       	ldd	r24, Z+2	; 0x02
 328:	93 81       	ldd	r25, Z+3	; 0x03
 32a:	10 97       	sbiw	r26, 0x00	; 0
 32c:	29 f0       	breq	.+10     	; 0x338 <malloc+0x44>
 32e:	13 96       	adiw	r26, 0x03	; 3
 330:	9c 93       	st	X, r25
 332:	8e 93       	st	-X, r24
 334:	12 97       	sbiw	r26, 0x02	; 2
 336:	2c c0       	rjmp	.+88     	; 0x390 <malloc+0x9c>
 338:	90 93 2d 01 	sts	0x012D, r25
 33c:	80 93 2c 01 	sts	0x012C, r24
 340:	27 c0       	rjmp	.+78     	; 0x390 <malloc+0x9c>
 342:	21 15       	cp	r18, r1
 344:	31 05       	cpc	r19, r1
 346:	31 f0       	breq	.+12     	; 0x354 <malloc+0x60>
 348:	42 17       	cp	r20, r18
 34a:	53 07       	cpc	r21, r19
 34c:	18 f0       	brcs	.+6      	; 0x354 <malloc+0x60>
 34e:	a9 01       	movw	r20, r18
 350:	db 01       	movw	r26, r22
 352:	01 c0       	rjmp	.+2      	; 0x356 <malloc+0x62>
 354:	ef 01       	movw	r28, r30
 356:	9a 01       	movw	r18, r20
 358:	bd 01       	movw	r22, r26
 35a:	df 01       	movw	r26, r30
 35c:	02 80       	ldd	r0, Z+2	; 0x02
 35e:	f3 81       	ldd	r31, Z+3	; 0x03
 360:	e0 2d       	mov	r30, r0
 362:	d7 cf       	rjmp	.-82     	; 0x312 <malloc+0x1e>
 364:	21 15       	cp	r18, r1
 366:	31 05       	cpc	r19, r1
 368:	f9 f0       	breq	.+62     	; 0x3a8 <malloc+0xb4>
 36a:	28 1b       	sub	r18, r24
 36c:	39 0b       	sbc	r19, r25
 36e:	24 30       	cpi	r18, 0x04	; 4
 370:	31 05       	cpc	r19, r1
 372:	80 f4       	brcc	.+32     	; 0x394 <malloc+0xa0>
 374:	8a 81       	ldd	r24, Y+2	; 0x02
 376:	9b 81       	ldd	r25, Y+3	; 0x03
 378:	61 15       	cp	r22, r1
 37a:	71 05       	cpc	r23, r1
 37c:	21 f0       	breq	.+8      	; 0x386 <malloc+0x92>
 37e:	fb 01       	movw	r30, r22
 380:	93 83       	std	Z+3, r25	; 0x03
 382:	82 83       	std	Z+2, r24	; 0x02
 384:	04 c0       	rjmp	.+8      	; 0x38e <malloc+0x9a>
 386:	90 93 2d 01 	sts	0x012D, r25
 38a:	80 93 2c 01 	sts	0x012C, r24
 38e:	fe 01       	movw	r30, r28
 390:	32 96       	adiw	r30, 0x02	; 2
 392:	44 c0       	rjmp	.+136    	; 0x41c <malloc+0x128>
 394:	fe 01       	movw	r30, r28
 396:	e2 0f       	add	r30, r18
 398:	f3 1f       	adc	r31, r19
 39a:	81 93       	st	Z+, r24
 39c:	91 93       	st	Z+, r25
 39e:	22 50       	subi	r18, 0x02	; 2
 3a0:	31 09       	sbc	r19, r1
 3a2:	39 83       	std	Y+1, r19	; 0x01
 3a4:	28 83       	st	Y, r18
 3a6:	3a c0       	rjmp	.+116    	; 0x41c <malloc+0x128>
 3a8:	20 91 2a 01 	lds	r18, 0x012A
 3ac:	30 91 2b 01 	lds	r19, 0x012B
 3b0:	23 2b       	or	r18, r19
 3b2:	41 f4       	brne	.+16     	; 0x3c4 <malloc+0xd0>
 3b4:	20 91 02 01 	lds	r18, 0x0102
 3b8:	30 91 03 01 	lds	r19, 0x0103
 3bc:	30 93 2b 01 	sts	0x012B, r19
 3c0:	20 93 2a 01 	sts	0x012A, r18
 3c4:	20 91 00 01 	lds	r18, 0x0100
 3c8:	30 91 01 01 	lds	r19, 0x0101
 3cc:	21 15       	cp	r18, r1
 3ce:	31 05       	cpc	r19, r1
 3d0:	41 f4       	brne	.+16     	; 0x3e2 <malloc+0xee>
 3d2:	2d b7       	in	r18, 0x3d	; 61
 3d4:	3e b7       	in	r19, 0x3e	; 62
 3d6:	40 91 04 01 	lds	r20, 0x0104
 3da:	50 91 05 01 	lds	r21, 0x0105
 3de:	24 1b       	sub	r18, r20
 3e0:	35 0b       	sbc	r19, r21
 3e2:	e0 91 2a 01 	lds	r30, 0x012A
 3e6:	f0 91 2b 01 	lds	r31, 0x012B
 3ea:	e2 17       	cp	r30, r18
 3ec:	f3 07       	cpc	r31, r19
 3ee:	a0 f4       	brcc	.+40     	; 0x418 <malloc+0x124>
 3f0:	2e 1b       	sub	r18, r30
 3f2:	3f 0b       	sbc	r19, r31
 3f4:	28 17       	cp	r18, r24
 3f6:	39 07       	cpc	r19, r25
 3f8:	78 f0       	brcs	.+30     	; 0x418 <malloc+0x124>
 3fa:	ac 01       	movw	r20, r24
 3fc:	4e 5f       	subi	r20, 0xFE	; 254
 3fe:	5f 4f       	sbci	r21, 0xFF	; 255
 400:	24 17       	cp	r18, r20
 402:	35 07       	cpc	r19, r21
 404:	48 f0       	brcs	.+18     	; 0x418 <malloc+0x124>
 406:	4e 0f       	add	r20, r30
 408:	5f 1f       	adc	r21, r31
 40a:	50 93 2b 01 	sts	0x012B, r21
 40e:	40 93 2a 01 	sts	0x012A, r20
 412:	81 93       	st	Z+, r24
 414:	91 93       	st	Z+, r25
 416:	02 c0       	rjmp	.+4      	; 0x41c <malloc+0x128>
 418:	e0 e0       	ldi	r30, 0x00	; 0
 41a:	f0 e0       	ldi	r31, 0x00	; 0
 41c:	cf 01       	movw	r24, r30
 41e:	df 91       	pop	r29
 420:	cf 91       	pop	r28
 422:	08 95       	ret

00000424 <free>:
 424:	cf 93       	push	r28
 426:	df 93       	push	r29
 428:	00 97       	sbiw	r24, 0x00	; 0
 42a:	09 f4       	brne	.+2      	; 0x42e <free+0xa>
 42c:	87 c0       	rjmp	.+270    	; 0x53c <__stack+0x3d>
 42e:	fc 01       	movw	r30, r24
 430:	32 97       	sbiw	r30, 0x02	; 2
 432:	13 82       	std	Z+3, r1	; 0x03
 434:	12 82       	std	Z+2, r1	; 0x02
 436:	c0 91 2c 01 	lds	r28, 0x012C
 43a:	d0 91 2d 01 	lds	r29, 0x012D
 43e:	20 97       	sbiw	r28, 0x00	; 0
 440:	81 f4       	brne	.+32     	; 0x462 <free+0x3e>
 442:	20 81       	ld	r18, Z
 444:	31 81       	ldd	r19, Z+1	; 0x01
 446:	28 0f       	add	r18, r24
 448:	39 1f       	adc	r19, r25
 44a:	80 91 2a 01 	lds	r24, 0x012A
 44e:	90 91 2b 01 	lds	r25, 0x012B
 452:	82 17       	cp	r24, r18
 454:	93 07       	cpc	r25, r19
 456:	79 f5       	brne	.+94     	; 0x4b6 <free+0x92>
 458:	f0 93 2b 01 	sts	0x012B, r31
 45c:	e0 93 2a 01 	sts	0x012A, r30
 460:	6d c0       	rjmp	.+218    	; 0x53c <__stack+0x3d>
 462:	de 01       	movw	r26, r28
 464:	20 e0       	ldi	r18, 0x00	; 0
 466:	30 e0       	ldi	r19, 0x00	; 0
 468:	ae 17       	cp	r26, r30
 46a:	bf 07       	cpc	r27, r31
 46c:	50 f4       	brcc	.+20     	; 0x482 <free+0x5e>
 46e:	12 96       	adiw	r26, 0x02	; 2
 470:	4d 91       	ld	r20, X+
 472:	5c 91       	ld	r21, X
 474:	13 97       	sbiw	r26, 0x03	; 3
 476:	9d 01       	movw	r18, r26
 478:	41 15       	cp	r20, r1
 47a:	51 05       	cpc	r21, r1
 47c:	09 f1       	breq	.+66     	; 0x4c0 <free+0x9c>
 47e:	da 01       	movw	r26, r20
 480:	f3 cf       	rjmp	.-26     	; 0x468 <free+0x44>
 482:	b3 83       	std	Z+3, r27	; 0x03
 484:	a2 83       	std	Z+2, r26	; 0x02
 486:	40 81       	ld	r20, Z
 488:	51 81       	ldd	r21, Z+1	; 0x01
 48a:	84 0f       	add	r24, r20
 48c:	95 1f       	adc	r25, r21
 48e:	8a 17       	cp	r24, r26
 490:	9b 07       	cpc	r25, r27
 492:	71 f4       	brne	.+28     	; 0x4b0 <free+0x8c>
 494:	8d 91       	ld	r24, X+
 496:	9c 91       	ld	r25, X
 498:	11 97       	sbiw	r26, 0x01	; 1
 49a:	84 0f       	add	r24, r20
 49c:	95 1f       	adc	r25, r21
 49e:	02 96       	adiw	r24, 0x02	; 2
 4a0:	91 83       	std	Z+1, r25	; 0x01
 4a2:	80 83       	st	Z, r24
 4a4:	12 96       	adiw	r26, 0x02	; 2
 4a6:	8d 91       	ld	r24, X+
 4a8:	9c 91       	ld	r25, X
 4aa:	13 97       	sbiw	r26, 0x03	; 3
 4ac:	93 83       	std	Z+3, r25	; 0x03
 4ae:	82 83       	std	Z+2, r24	; 0x02
 4b0:	21 15       	cp	r18, r1
 4b2:	31 05       	cpc	r19, r1
 4b4:	29 f4       	brne	.+10     	; 0x4c0 <free+0x9c>
 4b6:	f0 93 2d 01 	sts	0x012D, r31
 4ba:	e0 93 2c 01 	sts	0x012C, r30
 4be:	3e c0       	rjmp	.+124    	; 0x53c <__stack+0x3d>
 4c0:	d9 01       	movw	r26, r18
 4c2:	13 96       	adiw	r26, 0x03	; 3
 4c4:	fc 93       	st	X, r31
 4c6:	ee 93       	st	-X, r30
 4c8:	12 97       	sbiw	r26, 0x02	; 2
 4ca:	4d 91       	ld	r20, X+
 4cc:	5d 91       	ld	r21, X+
 4ce:	a4 0f       	add	r26, r20
 4d0:	b5 1f       	adc	r27, r21
 4d2:	ea 17       	cp	r30, r26
 4d4:	fb 07       	cpc	r31, r27
 4d6:	79 f4       	brne	.+30     	; 0x4f6 <free+0xd2>
 4d8:	80 81       	ld	r24, Z
 4da:	91 81       	ldd	r25, Z+1	; 0x01
 4dc:	84 0f       	add	r24, r20
 4de:	95 1f       	adc	r25, r21
 4e0:	02 96       	adiw	r24, 0x02	; 2
 4e2:	d9 01       	movw	r26, r18
 4e4:	11 96       	adiw	r26, 0x01	; 1
 4e6:	9c 93       	st	X, r25
 4e8:	8e 93       	st	-X, r24
 4ea:	82 81       	ldd	r24, Z+2	; 0x02
 4ec:	93 81       	ldd	r25, Z+3	; 0x03
 4ee:	13 96       	adiw	r26, 0x03	; 3
 4f0:	9c 93       	st	X, r25
 4f2:	8e 93       	st	-X, r24
 4f4:	12 97       	sbiw	r26, 0x02	; 2
 4f6:	e0 e0       	ldi	r30, 0x00	; 0
 4f8:	f0 e0       	ldi	r31, 0x00	; 0
 4fa:	8a 81       	ldd	r24, Y+2	; 0x02
 4fc:	9b 81       	ldd	r25, Y+3	; 0x03
 4fe:	00 97       	sbiw	r24, 0x00	; 0
 500:	19 f0       	breq	.+6      	; 0x508 <__stack+0x9>
 502:	fe 01       	movw	r30, r28
 504:	ec 01       	movw	r28, r24
 506:	f9 cf       	rjmp	.-14     	; 0x4fa <free+0xd6>
 508:	ce 01       	movw	r24, r28
 50a:	02 96       	adiw	r24, 0x02	; 2
 50c:	28 81       	ld	r18, Y
 50e:	39 81       	ldd	r19, Y+1	; 0x01
 510:	82 0f       	add	r24, r18
 512:	93 1f       	adc	r25, r19
 514:	20 91 2a 01 	lds	r18, 0x012A
 518:	30 91 2b 01 	lds	r19, 0x012B
 51c:	28 17       	cp	r18, r24
 51e:	39 07       	cpc	r19, r25
 520:	69 f4       	brne	.+26     	; 0x53c <__stack+0x3d>
 522:	30 97       	sbiw	r30, 0x00	; 0
 524:	29 f4       	brne	.+10     	; 0x530 <__stack+0x31>
 526:	10 92 2d 01 	sts	0x012D, r1
 52a:	10 92 2c 01 	sts	0x012C, r1
 52e:	02 c0       	rjmp	.+4      	; 0x534 <__stack+0x35>
 530:	13 82       	std	Z+3, r1	; 0x03
 532:	12 82       	std	Z+2, r1	; 0x02
 534:	d0 93 2b 01 	sts	0x012B, r29
 538:	c0 93 2a 01 	sts	0x012A, r28
 53c:	df 91       	pop	r29
 53e:	cf 91       	pop	r28
 540:	08 95       	ret

00000542 <memset>:
 542:	dc 01       	movw	r26, r24
 544:	01 c0       	rjmp	.+2      	; 0x548 <memset+0x6>
 546:	6d 93       	st	X+, r22
 548:	41 50       	subi	r20, 0x01	; 1
 54a:	50 40       	sbci	r21, 0x00	; 0
 54c:	e0 f7       	brcc	.-8      	; 0x546 <memset+0x4>
 54e:	08 95       	ret

00000550 <_exit>:
 550:	f8 94       	cli

00000552 <__stop_program>:
 552:	ff cf       	rjmp	.-2      	; 0x552 <__stop_program>
